/*
 * Delphix API Gateway
 *
 * Delphix API Gateway API
 *
 * API version: 1.0
 * Contact: support@delphix.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

// Parameters to register and authenticate an engine.
type EngineRegistrationParameter struct {
	Name string `json:"name"`
	Hostname string `json:"hostname"`
	Username string `json:"username,omitempty"`
	Password string `json:"password,omitempty"`
	// Arguments to pass to the Vault CLI tool to retrieve the username for the engine.
	HashicorpVaultUsernameCommandArgs []string `json:"hashicorp_vault_username_command_args,omitempty"`
	// Arguments to pass to the Vault CLI tool to retrieve the password for the engine.
	HashicorpVaultPasswordCommandArgs []string `json:"hashicorp_vault_password_command_args,omitempty"`
	// Reference to the Hashicorp vault to use to retrieve engine credentials.
	HashicorpVaultId int64 `json:"hashicorp_vault_id,omitempty"`
	// Allow connections to the engine over HTTPs without validating the TLS certificate. Even though the connection to the engine might be performed over HTTPs, setting this property eliminates the protection against a man-in-the-middle attach for connections to this engine. Instead, consider creating a truststore with a Certificate Authority to validate the engine's certificate, and set the truststore_path propery. 
	InsecureSsl bool `json:"insecure_ssl,omitempty"`
	// Ignore validation of the name associated to the TLS certificate when connecting to the engine over HTTPs. Setting this value must only be done if the TLS certificate of the engine does not match the hostname, and the TLS configuration of the engine cannot be fixed. Setting this property reduces the protection against a man-in-the-middle attack for connections to this engine. This is ignored if insecure_ssl is set. 
	UnsafeSslHostnameCheck bool `json:"unsafe_ssl_hostname_check,omitempty"`
	// File name of a truststore which can be used to validate the TLS certificate of the engine. The truststore must be available at /etc/config/certs/<truststore_filename> 
	TruststoreFilename string `json:"truststore_filename,omitempty"`
	// Password to read the truststore. 
	TruststorePassword string `json:"truststore_password,omitempty"`
}
